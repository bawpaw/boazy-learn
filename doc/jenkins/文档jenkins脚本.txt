def timeVersion() {
	// 20191210175842
    return new Date().format('yyyyMMddHHmmss')
}

def getRemoteServer(args) {
    def remote = [:]
    remote.name = 'SERVER_' + args.host
    remote.host = args.host
    remote.port = args.port
    remote.allowAnyHosts = true
    withCredentials([usernamePassword(credentialsId: args.credentialsId, passwordVariable: 'password', usernameVariable: 'username')]) {
        remote.user = "${username}"
        remote.password = "${password}"
    }
    remote.gateway = args.gateway
    return remote
}

pipeline {
    agent any

    environment {
        JAVA_HOME="/boazy/local/jdk/jdk1.8.0_202"
        CLASSPATH=".:${JAVA_HOME}/jre/lib:${JAVA_HOME}/lib"
        MAVEN_HOME="/boazy/local/maven"
        PATH="$JAVA_HOME/bin:$MAVEN_HOME/bin:$PATH"

        _timeVersion=timeVersion()
    }

    stages {
        stage('Checkout') {
            steps{
                echo 'Checkout'
                checkout([$class: 'GitSCM', branches: [[name: "${gitBranch}"]]
                        , doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: []
                        , userRemoteConfigs: [[credentialsId: 'f46d9565-fbf2-4f08-9e00-0a6953af58dc', url: "${gitUrl}"]]
                ])
            }
        }
        /*stage('Build') {
            steps {
                echo 'Build code'
                sh 'mvn clean compile -U -Dmaven.test.skip=true'
            }
        }*/
        stage('Publish doc') {
            steps {
                echo 'Publish doc'
                script {
                    def placeHost = getRemoteServer([host: "192.168.0.95", credentialsId: "d72cbb47-ecde-4000-b5eb-de8837a563f8"])
                    def docDirStr = sh label: '获取文档目录', returnStdout: true, script: "echo `ls -lR |grep api-doc:`"
                    def docDirs = docDirStr.split(' ')

                    for(docDir in docDirs) {
                        int index = docDir.indexOf(":") - 1
                        docDir = docDir[2..index]
                        index = docDir.indexOf("/src") - 1
                        def outDir = "/boazy/data/dockerdata/doc-nginx/html" + "${dirGroup}" + "/" + docDir[0..index]
                        
                        sshCommand remote: placeHost, command: "mkdir -p ${outDir}"
                        sshPut remote: placeHost, from: "${docDir}", into: "${outDir}"
                        sshCommand remote: placeHost, command: """
                            cd ${outDir}
                            rm -rf last
                        """, failOnError: false
                        sshCommand remote: placeHost, command: """
                            cd ${outDir}
                            cp -r api-doc ${_timeVersion}
                            mv api-doc last
                        """
                    }
                }
            }
        }
    }
}